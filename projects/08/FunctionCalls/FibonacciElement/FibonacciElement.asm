// BOOTSTRAP

@256
D=A
@SP
M=D
// CALL SYS.INIT 0

@RETURN.0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@LCL
M=D
@5
D=D-A
@ARG
M=D
@Sys.init
0;JMP
(RETURN.0)




// FUNCTION MAIN.FIBONACCI 0

(Main.fibonacci)
@SP


// PUSH ARGUMENT 0

@ARG
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1


// PUSH CONSTANT 2

@2
D=A
@SP
A=M
M=D
@SP
M=M+1


// LT

@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
@IS_TRUE.1
D;JLT
D=0
@IS_FALSE.1
0;JMP
(IS_TRUE.1)
D=-1
(IS_FALSE.1)
@SP
A=M-1
M=D


// IF-GOTO IF_TRUE

@SP
AM=M-1
D=M
@IF_TRUE
D;JNE


// GOTO IF_FALSE

@IF_FALSE
0;JMP


// LABEL IF_TRUE

(IF_TRUE)


// PUSH ARGUMENT 0

@ARG
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1


// RETURN

@LCL
D=M
@5
A=D-A
D=M
@R13
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A+1
@SP
M=D
@LCL
D=M
@1
A=D-A
D=M
@THAT
M=D
@LCL
D=M
@2
A=D-A
D=M
@THIS
M=D
@LCL
D=M
@3
A=D-A
D=M
@ARG
M=D
@LCL
D=M
@4
A=D-A
D=M
@LCL
M=D
@R13
A=M
0;JMP


// LABEL IF_FALSE

(IF_FALSE)


// PUSH ARGUMENT 0

@ARG
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1


// PUSH CONSTANT 2

@2
D=A
@SP
A=M
M=D
@SP
M=M+1


// SUB

@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=D


// CALL MAIN.FIBONACCI 1

@RETURN.2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@LCL
M=D
@6
D=D-A
@ARG
M=D
@Main.fibonacci
0;JMP
(RETURN.2)


// PUSH ARGUMENT 0

@ARG
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1


// PUSH CONSTANT 1

@1
D=A
@SP
A=M
M=D
@SP
M=M+1


// SUB

@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=D


// CALL MAIN.FIBONACCI 1

@RETURN.3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@LCL
M=D
@6
D=D-A
@ARG
M=D
@Main.fibonacci
0;JMP
(RETURN.3)


// ADD

@SP
M=M-1
A=M
D=M
A=A-1
D=M+D
M=D


// RETURN

@LCL
D=M
@5
A=D-A
D=M
@R13
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A+1
@SP
M=D
@LCL
D=M
@1
A=D-A
D=M
@THAT
M=D
@LCL
D=M
@2
A=D-A
D=M
@THIS
M=D
@LCL
D=M
@3
A=D-A
D=M
@ARG
M=D
@LCL
D=M
@4
A=D-A
D=M
@LCL
M=D
@R13
A=M
0;JMP


// FUNCTION SYS.INIT 0

(Sys.init)
@SP


// PUSH CONSTANT 4

@4
D=A
@SP
A=M
M=D
@SP
M=M+1


// CALL MAIN.FIBONACCI 1

@RETURN.4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@LCL
M=D
@6
D=D-A
@ARG
M=D
@Main.fibonacci
0;JMP
(RETURN.4)


// LABEL WHILE

(WHILE)


// GOTO WHILE

@WHILE
0;JMP


